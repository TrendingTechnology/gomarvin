{
  "info": {
    "_postman_id": "6eb04c1b-32ac-4876-9f9a-4c4da5634f7e",
    "name": "gomarvin-tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "/user",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// pm.test(\"Res 200\", function () {",
              "//     pm.response.to.have.status(200);",
              "// });",
              "",
              "pm.test(\"200, Res is valid\", function () {",
              "    pm.expect(pm.response.json()).to.deep.equal(",
              "        {",
              "            \"data\": \"\",",
              "            \"message\": \"\",",
              "            \"status\": 200",
              "        }",
              "    )",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://127.0.0.1:4444/api/v1/user/",
          "protocol": "http",
          "host": ["127", "0", "0", "1"],
          "port": "4444",
          "path": ["api", "v1", "user", ""]
        }
      },
      "response": []
    },
    {
      "name": "/user/register empty-body",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"400, Invalid JSON Object! message\", function () {",
              "    pm.expect(pm.response.json()).to.deep.equal(",
              "        {",
              "            \"data\": \"Unprocessable Entity\",",
              "            \"message\": \"Invalid JSON Object!\",",
              "            \"status\": 400",
              "        }",
              "    )",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://127.0.0.1:4444/api/v1/user/register",
          "protocol": "http",
          "host": ["127", "0", "0", "1"],
          "port": "4444",
          "path": ["api", "v1", "user", "register"]
        }
      },
      "response": []
    },
    {
      "name": "/user/register empty-object",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Payload validation failed! message in response\", function () {",
              "    const res = pm.response.json();",
              "    // pm.expect(res.message).to.eql(' validation fail!');",
              "    pm.expect(res.message).to.eql('Payload validation failed!');",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://127.0.0.1:4444/api/v1/user/register",
          "protocol": "http",
          "host": ["127", "0", "0", "1"],
          "port": "4444",
          "path": ["api", "v1", "user", "register"]
        }
      },
      "response": []
    },
    {
      "name": "/user/register invalid email",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"400, Invalid JSON Object! message\", function () {",
              "    pm.expect(pm.response.json()).to.deep.equal(",
              "        {",
              "            \"data\": [",
              "                {",
              "                    \"FailedField\": \"__CreateUserBody.Email\",",
              "                    \"Tag\": \"email\",",
              "                    \"Value\": \"\"",
              "                }",
              "            ],",
              "            \"message\": \"Payload validation failed!\",",
              "            \"status\": 400",
              "        }",
              "    )",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"qweqwe\",\n    \"email\": \"qwe--qwe.co\",\n    \"age\": 29,\n    \"password\": \"asdkqweoxolklqpqo\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://127.0.0.1:4444/api/v1/user/register",
          "protocol": "http",
          "host": ["127", "0", "0", "1"],
          "port": "4444",
          "path": ["api", "v1", "user", "register"]
        }
      },
      "response": []
    },
    {
      "name": "/user/register valid payload",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"400, Invalid JSON Object! message\", function () {",
              "    pm.expect(pm.response.json()).to.deep.equal(",
              "        {",
              "            \"data\": \"\",",
              "            \"message\": \"\",",
              "            \"status\": 200",
              "        }",
              "    )",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"username\": \"qweqwe\",\n    \"email\": \"qwe@we.co\",\n    \"age\": 29,\n    \"password\": \"asdkqweoxolklqpqssso\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://127.0.0.1:4444/api/v1/user/register",
          "protocol": "http",
          "host": ["127", "0", "0", "1"],
          "port": "4444",
          "path": ["api", "v1", "user", "register"]
        }
      },
      "response": []
    }
  ]
}
